name: Deploy

on:
  push:
    tags:
      - "v[0-9]+*"

permissions:
  contents: write

jobs:
  build-and-upload:
    name: Build and upload
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        # You can add more, for any target you'd like!
        include:
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu

          - build: linux
            os: ubuntu-latest
            target: aarch64-unknown-linux-gnu

          - build: macos
            os: macos-latest
            target: aarch64-apple-darwin

          - build: macos
            os: macos-latest
            target: x86_64-apple-darwin

          - build: windows
            os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get the release version from the tag
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Install Rust
        # Or @nightly if you want
        uses: dtolnay/rust-toolchain@stable
        # Arguments to pass in
        with:
          # Make Rust compile to our target (defined in the matrix)
          targets: ${{ matrix.target }}

      - name: Set up cargo cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: ${{ matrix.os }}-${{ matrix.target }}-cargo

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --verbose --release --target ${{ matrix.target }}

      - name: Build archive
        shell: bash
        run: |
          ls -lash target/${{ matrix.target }}/release
          suffix="${{ env.VERSION }}-${{ matrix.target }}"
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            ext=".exe"
          fi

          mv "target/${{ matrix.target }}/release/vesuvius-gui$ext" vesuvius-gui-$suffix$ext
          mv "target/${{ matrix.target }}/release/vesuvius-render$ext" vesuvius-render-$suffix$ext

          echo "ASSET1=vesuvius-gui-$suffix$ext" >> $GITHUB_ENV
          echo "ASSET2=vesuvius-render-$suffix$ext" >> $GITHUB_ENV

          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            mv "target/${{ matrix.target }}/release/vesuvius_gui.pdb" vesuvius_gui-$suffix.pdb
            echo "ASSET3=vesuvius_gui-$suffix.pdb" >> $GITHUB_ENV
          fi

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ env.ASSET1 }}
            ${{ env.ASSET2 }}
            ${{ env.ASSET3 }}
